[
  {
    "tags": [],
    "description": {
      "full": "<p>shint<br />  strict:true</p>",
      "summary": "<p>shint<br />  strict:true</p>",
      "body": ""
    },
    "ignore": false,
    "code": "(function ($) {\n  'use strict';\n\n  $.Ninja.Autocomplete = function (element, options) {\n    this.$wrapper = $(element).wrap('<span class=\"nui-atc\">').parent();\n    this.$list = $('<div>', {\n      css: {\n        top: this.$wrapper.height() - 2\n      }\n    });\n    this.datalist = [];\n    this.matchlist = [];\n    if (options && options.get) {\n      this.get = options.get;\n    }\n    this.index = -1;\n  };\n\n  $.Ninja.Autocomplete.prototype.last = function () {\n    return this.matchlist.length - 1;\n  };\n\n  $.Ninja.Autocomplete.prototype.list = function (datalist) {\n    var autocomplete = this;\n\n    if (!$.isFunction(autocomplete.get)) {\n      autocomplete.matchlist = $.map(datalist, function (option) {\n        var value = autocomplete.$element.val();\n\n        if (value !== option && new RegExp('^' + value, 'i').test(option)) {\n          return option;\n        } else {\n          return null;\n        }\n      });\n    } else {\n      autocomplete.matchlist = datalist;\n    }\n\n    autocomplete.$list.empty();\n\n    if (autocomplete.matchlist.length > 0) {\n      $.each(autocomplete.matchlist, function () {\n        var option = this;\n\n        $('<div>', {\n          html: option\n        }).on('hover.ninja', function () {\n          $(this).toggleClass('nui-hvr');\n        }).on('mousedown.ninja', function () {\n          autocomplete.$element.val(option);\n        }).appendTo(autocomplete.$list);\n      });\n\n      autocomplete.index = -1;\n\n      autocomplete.$list.appendTo(autocomplete.$wrapper);\n    }\n  };\n\n  $.ninja.autocomplete = function (element, options) {\n    var autocomplete = $.extend(new $.Ninja(element, options), new $.Ninja.Autocomplete(element, options));\n\n    if (options && options.datalist) {\n      autocomplete.datalist = options.datalist;\n    } else if (autocomplete.$element.data('list')) {\n      autocomplete.datalist = autocomplete.$element.data('list');\n    } else if (autocomplete.$element.attr('list')) {\n      $('datalist#' + autocomplete.$element.attr('list')).find('option').each(function () {\n        autocomplete.datalist.push($(this).val());\n      });\n    }\n\n    autocomplete.$element.attr({\n      autocomplete: 'off'\n    }).removeAttr('list');\n\n    autocomplete.$element.on('blur.ninja', function () {\n      autocomplete.$list.remove();\n    });\n\n    autocomplete.$element.on('keydown.ninja', function (event) {\n      var keycode = event.which;\n\n      if ($.ninja.key(keycode, ['escape', 'tab'])) {\n        autocomplete.$list.remove();\n      } else if (keycode === $.ninja.keys.enter && autocomplete.index > -1) {\n        autocomplete.$element.val(autocomplete.matchlist[autocomplete.index]).blur();\n      } else if ($.ninja.key(keycode, ['arrowDown', 'arrowUp'])) {\n        if (autocomplete.index > -1) {\n          autocomplete.$list.find(':eq(' + autocomplete.index + ')').removeClass('nui-hvr');\n        }\n\n        if (keycode === $.ninja.keys.arrowDown) {\n          if (autocomplete.index === autocomplete.last()) {\n            autocomplete.index = 0;\n          } else {\n            autocomplete.index += 1;\n          }\n        } else {\n          if (autocomplete.index <= 0) {\n            autocomplete.index = autocomplete.last();\n          } else {\n            autocomplete.index -= 1;\n          }\n        }\n\n        autocomplete.$list.find(':eq(' + autocomplete.index + ')').addClass('nui-hvr');\n      }\n    });\n\n    autocomplete.$element.on('focus.ninja, keyup.ninja', function (event) {\n      var keycode = event.which;\n\n      if (!autocomplete.$element.val()) {\n        autocomplete.$list.remove();\n      } else if (!$.ninja.key(keycode, ['arrowDown', 'arrowUp', 'escape', 'tab'])) {\n        if ($.isFunction(autocomplete.get)) {\n          autocomplete.get(autocomplete.$element.val(), function (datalist) {\n            autocomplete.datalist = datalist;\n\n            autocomplete.list(datalist);\n          });\n        } else {\n          autocomplete.list(autocomplete.datalist);\n        }\n      }\n    });\n  };\n}(window.jQuery));"
  }
]